// <auto-generated />
using System;
using DAL.DbModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(HistoryZfContext))]
    [Migration("20230504104835_change-Event-table-name")]
    partial class changeEventtablename
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.DbModels.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<int?>("FromYear")
                        .HasColumnType("int");

                    b.Property<string>("StateBorders")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<int?>("ToYear")
                        .HasColumnType("int");

                    b.HasKey("CountryId")
                        .HasName("PK__Country__10D1609F0DAE7E3E");

                    b.HasIndex(new[] { "CountryName" }, "UQ__Country__E056F20197D93E2C")
                        .IsUnique();

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("DAL.DbModels.HistoryEvent", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Ecity")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("ECity");

                    b.Property<string>("Edescription")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)")
                        .HasColumnName("EDescription");

                    b.Property<DateTime?>("EventDate")
                        .HasColumnType("date");

                    b.Property<int?>("Eyear")
                        .HasColumnType("int")
                        .HasColumnName("EYear");

                    b.Property<string>("TiteleEvent")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("EventId")
                        .HasName("PK__Events__7944C810033C6CC2");

                    b.HasIndex(new[] { "TiteleEvent" }, "UQ__Events__86C17744AEF4CE68")
                        .IsUnique();

                    b.ToTable("HistoryEvents", (string)null);
                });

            modelBuilder.Entity("DAL.DbModels.Person", b =>
                {
                    b.Property<int>("PeopleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeopleId"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeathDate")
                        .HasColumnType("date");

                    b.Property<string>("PeopleName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("PeopleRole")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("PeopleId")
                        .HasName("PK__People__2B24391C3B8A9B2E");

                    b.HasIndex(new[] { "PeopleName" }, "UQ__People__2DC9F30E0FD0D2F5")
                        .IsUnique();

                    b.ToTable("People");
                });
#pragma warning restore 612, 618
        }
    }
}
